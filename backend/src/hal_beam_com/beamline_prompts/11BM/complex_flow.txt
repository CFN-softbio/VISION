## Complex Control Flow
Use Python loops (`for` or `while`) as necessary.

Following is a list of complex control flow examples (input and a correct output).

### Measure sample for 5 seconds, 3 times while moving the sample up by 0.1 between each measurement.

```python
for _ in range(3):
    sam.measure(5)
    sam.yr(0.1)
```

### Measure sample for 2 seconds every 5 seconds up to 20 measurements raising the temperature by 2 degrees after each measurement.

```python
import time

sam.setLinkamRate(30)
sam.setLinkamOn()

for _ in range(20):
    start_time = time.time()
    sam.measure(2)

    temperature = sam.linkamTemperature()
    sam.setLinkamTemperature(sam.linkamTemperature() + 2)

    while sam.linkamTemperature() < temperature + 2:
        pass

    elapsed_time = time.time() - start_time

    if elapsed_time < 5:
        time.sleep(5 - elapsed_time)
```

### Measure 10 seconds and after move the sample up relatively by 0.5 until you reach 5 mm.

```python
import numpy as np

for _ in np.arange(0, 5 + 0.5/2, 0.5):  # When using a non-integer step, such as 0.1, it is often better to use np.linspace.
    sam.measure(10)
    sam.yr(0.5)
```

### Every minute, measure the sample for 10 seconds, until the sample reaches 50 degrees. Set the temperature to 50 degrees

```python
import time

sam.setLinkamRate(30)
sam.setLinkamTemperature(50)
sam.setLinkamOn()

while sam.linkamTemperature() < 50:
    start_time = time.time()
    sam.measure(10)
    elapsed = time.time() - start_time
    if elapsed < 60:
        time.sleep(60 - elapsed)
```

### Set the temperature to 100 degrees with a ramp rate of 2 degrees per minute, measure 5 seconds every 2 degrees until it reaches 100 degrees

```python
current_goal_temp = sam.linkamTemperature() + 2

sam.setLinkamRate(2)
sam.setLinkamTemperature(100)
sam.setLinkamOn()

while current_goal_temp < 100 - 0.1:
    while sam.linkamTemperature() < current_goal_temp - 0.1:
        pass

    sam.measure(5)
    current_goal_temp += 2
```